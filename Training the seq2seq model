// Setting the hyperparameters
//the whole process of the brain has the following processes:
  1-- getting the batches of input into the neural network
  2-- forward propagating them inside the encoder to get the encoder states
  3-- forward propagating the encoder states with the targets inside the decoder RNN to get the final output
  4-- Backpropagating the loss generated by the output and the targets back into the NN and updating the weights towards the direction of a better ability for the chatbot to speak like a human.


epochs = 100                     //it is a one whole iteration of the training 
batch_size = 32                  //  
rnn_size = 1024                  // 
num_layers = 3                   //hw many layers we have in encoder_rnn and decoder_nn
encoding_embedding_size = 1024   //it is the no . of columns in the embedding matrix i.e the no. of columns we wanna have for embeddings colmn
decoding_embedding_size = 1024   //
learning_rate = 0.001            //
learning_rate_decay = 0.9        //how the learning rate decays to learn better
min_learning_rate = 0.0001       // learning rate cannot drop below this
keep_probability = 0.5           // 1 - dropout rate
 
 //here we define a tensorflow session where all tensorflow sessionn on which all the tensorflow training will be run . TO open a session 
 //are going to create an object of the interactive session class, and that object will be our session. But before we do this , we need to reset the tensorflow graph to ensure
 //that the graph is ready for training
 # Defining a session
tf.reset_default_graph()
session = tf.InteractiveSession()


//We are going to load the inputs of our seq2seq model, to do this, we have a tool that we defined earlier, i.en model_inputs() that returns, the 
// inputs,targets, lr, keep-probablity
# Loading the model inputs
inputs, targets, lr, keep_prob = model_inputs()

//we are going to set the sequence length variable,by creating it using a placeholder, because we are gooing to use a default value incase input is not fed.
# Setting the sequence length
sequence_length = tf.placeholder_with_default(25//max length, None// shape, name = 'sequence_length')

//we need to give the tensor a shape
 # Getting the shape of the inputs tensor
input_shape = tf.shape(inputs)
